name: Deploy Accounts Service

on:
  push:
    branches:
      - main
    paths:
      - "services/apps/accounts-service/**"
      - ".github/workflows/deploy-accounts-service.yaml"
  workflow_dispatch:

env:
  AWS_REGION: us-west-1
  ECR_REPOSITORY: chatterbox-accounts
  ECS_SERVICE: ChatterboxAccountsECSService
  ECS_CLUSTER: ChatterboxECSCluster
  ECS_TASK_DEFINITION_NAME: ChatterboxAccountsECSTaskDefinition
  ECS_TASK_DEFINITION_PATH: task-definition.json
  CONTAINER_NAME: accounts

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: services

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          IMAGE=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker build -t $IMAGE -f apps/accounts-service/Dockerfile .
          docker push $IMAGE
          echo "IMAGE=$IMAGE" >> $GITHUB_OUTPUT

      - name: Pull Amazon ECS task definition
        run: |
          aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION_NAME --query taskDefinition > $ECS_TASK_DEFINITION_PATH

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION_PATH }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.IMAGE }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
