datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialActions"]
}

model User {
  id        Int       @id @default(autoincrement())
  sub       String    @unique @map("sub")
  username  String    @unique @db.VarChar(50)
  avatarUrl String?
  parties   Member[]
  messages  Message[]

  @@map("users")
}

model Party {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(50)
  users     Member[]
  topics    Topic[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("parties")
}

model Topic {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(50)
  partyId   Int       @map("party_id")
  party     Party     @relation(fields: [partyId], references: [id], onDelete: Cascade)
  messages  Message[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("topics")
}

model Member {
  userId    Int       @map("user_id")
  partyId   Int       @map("party_id")
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  party     Party     @relation(fields: [partyId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@id([userId, partyId])
  @@map("members")
}

model Message {
  id        Int       @id @default(autoincrement())
  body      String    @db.VarChar(500)
  userId    Int       @map("user_id")
  topicId   Int       @map("topic_id")
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  topic     Topic     @relation(fields: [topicId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("messages")
}